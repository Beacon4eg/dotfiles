#!/bin/bash

set -e

RED='\033[0;31m'
NC='\033[0m' # No Color

function config_init() {
    run_setup
}

function config_upgrade() {
    # Fetch current version of configs
    if git --git-dir=$HOME/.dotfiles/ --work-tree=$HOME diff --quiet; then
        git --git-dir=$HOME/.dotfiles/ --work-tree=$HOME pull
    else
        printf "${RED}CONFIG REPO IS DIRTY! SKIPPING UPDATE!${NC}\n"
    fi
    run_setup
}

function run_setup() {
    local current_dir
    current_dir="$( cd "$( dirname "${BASH_SOURCE[0]}" )" &> /dev/null && pwd )"
    # Now we can run updated version after 'git pull'
    source "${current_dir}/setup_config_lib/main.sh"
    setup_main
}

function error() {
    printf "${RED}ERROR: $1${NC}\n"
    exit 1
}

function usage() {
    set +x
    echo "Usage: $0 [arguments]"
    echo "Arguments:"
    echo "  init:           initial configuration setup on this machine"
    echo "  upgrade:        full upgrade of configuration and installed packages"
    echo "  -h or --help:   show this message and exit"
}

# Parse arguments
if [[ $# -ne 1 ]]; then
    usage
fi

COMMAND="$1"
case $COMMAND in
    init)
        config_init
        ;;
    upgrade)
        config_upgrade
        ;;
    -h|--help)
        usage
        ;;
esac
